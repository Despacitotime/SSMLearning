<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace=绑定那个一个对应的Dao/Mapper接口-->
<mapper namespace="com.wq.Dao.UserMapper">
    <!--查询语句,id为接口中对应的方法,resultType为返回值类型-->
    <!--返回值为List列表，resultType使用列表中存储的数据的类型-->
    <select id="getUserList" resultType="com.wq.pojo.User">
        select * from mybaties.user;
    </select>

    <!--根据ID查询用户-->
    <!--快捷键 sel+回车-->
    <!--id=#{id}表示接受方法中传来的参数，#{}中的id即参数的名称-->
    <select id="getUserById" resultType="com.wq.pojo.User" parameterType="int">
        select * from mybaties.user where id=#{id};
    </select>

    <!--insert一个用户-->
    <!--虽然传入的是一个user对象，但是对象中的属性可以直接取出来-->
    <insert id="addUser" parameterType="com.wq.pojo.User">
        insert into mybatis.user (id,name,pwd) values (#{id},#{name},#{pwd});
    </insert>

    <!--修改一个用户数据-->
    <update id="updateUser" parameterType="com.wq.pojo.User">
        update mybatis.user set name=#{name},pwd=#{pwd} where id=#{id};
    </update>

    <!--删除数据-->
    <delete id="deleteUser" parameterType="int">
        delete from mybatis.user where id = #{id};
    </delete>

    <!--使用Map查询User-->
    <select id="getUserById2" parameterType="map" resultType="com.wq.pojo.User">
        select * from mybatis.user where id=#{ids};
    </select>

    <!--模糊查询-->
    <select id="getUserLike" parameterType="String" resultType="com.wq.pojo.User">
        select * from mybatis.user where name like #{name};
    </select>

    <!--防止SQL注入的模糊查询-->
    <select id="getUserLike2" parameterType="String" resultType="com.wq.pojo.User">
        select * from mybatis.user where name like "%"#{name}"%";
    </select>
</mapper>

